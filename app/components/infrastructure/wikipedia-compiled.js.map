{"version":3,"sources":["wikipedia.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,CAAC,CAEpC,OAAO,CAAC,OAAO,EAAE,UAAS,KAAK,EAAE,EAAE,EAAE;AAClC,QAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,WAAO,CAAC,YAAY,GAAG,UAAS,MAAM,EAAE;AACpC,YAAI,GAAG,GAAG,EAAE,CAAC;;AAEb,aAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxC,eAAG,CAAC,IAAI,CACJ;AACI,oBAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,oBAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,oBAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1B,CACJ,CAAC;SACL;;AAED,eAAO,GAAG,CAAC;KACd,CAAA;;AAED,WAAO,CAAC,gBAAgB,GAAG,UAAA,IAAI;eAC3B,EAAE,CAAC,UAAU,CACR,WAAW,CAAC,KAAK,CAAC;AACf,eAAG,EAAE,2DAA2D;AAChE,kBAAM,EAAE,OAAO;AACf,kBAAM,EAAE;AACJ,sBAAM,EAAE,YAAY;AACpB,sBAAM,EAAE,IAAI;AACZ,sBAAM,EAAE,MAAM;aACjB;SACJ,CAAC,CAAC,CACF,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC;KAC7B,CAAC;;AAEN,WAAO,OAAO,CAAC;CAClB,CAAC,CAED,OAAO,CAAC,WAAW,EAAE,UAAS,KAAK,EAAE;AAClC,QAAI,CAAC,MAAM,GAAG,UAAA,IAAI;eAAI,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC;KAAA,CAAC;CACtD,CAAC,CAAC","file":"wikipedia-compiled.js","sourcesContent":["'use strict';\r\n\r\nangular.module('infra.wikipedia', ['rx'])\r\n\r\n    .factory('_impl', function($http, rx) {\r\n        var factory = {};\r\n\r\n        factory._processData = function(result) {\r\n            var arr = [];\r\n\r\n            for (var i=0; i<result.data[1].length; i++) {\r\n                arr.push(\r\n                    {\r\n                        term: result.data[1][i],\r\n                        desc: result.data[2][i],\r\n                        href: result.data[3][i]\r\n                    }\r\n                );\r\n            }\r\n\r\n            return arr;\r\n        }\r\n\r\n        factory._searchWikipedia = term => (\r\n            rx.Observable\r\n                .fromPromise($http({\r\n                    url: \"http://en.wikipedia.org/w/api.php?&callback=JSON_CALLBACK\",\r\n                    method: \"jsonp\",\r\n                    params: {\r\n                        action: \"opensearch\",\r\n                        search: term,\r\n                        format: \"json\"\r\n                    }\r\n                }))\r\n                .map(factory._processData)\r\n            );\r\n\r\n        return factory;\r\n    })\r\n\r\n    .service('wikipedia', function(_impl) {\r\n        this.search = term => _impl._searchWikipedia(term);\r\n    });"]}